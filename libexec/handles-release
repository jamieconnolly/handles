#!/bin/bash
# Usage: handles release [<version> | +major | +minor | +patch]
# Summary: Tag and push a release

set -e

cd "$(git rev-parse --show-toplevel 2>/dev/null)"

CURRENT_VERSION="$(git describe --tags --abbrev=0 --match='v[0-9]*' 2>/dev/null || true)"
VERSION="$1"
VERSION_REGEX="^v(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))?)?$"

if [ -z "$VERSION" ]; then
  handles help release >&2
  exit 1
elif [ -z "$(git symbolic-ref HEAD)" ]; then
  echo "!!! Error: your checkout isn't on a branch" >&2
  exit 1
elif [ "$(git symbolic-ref HEAD)" != "refs/heads/master" ]; then
  echo "!!! Error: your checkout isn't on master" >&2
  exit 1
elif ! git fetch --quiet --tags origin; then
  echo "!!! Error: running 'git fetch' failed" >&2
  exit 1
elif [ -n "$CURRENT_VERSION" ] && [ "$(git rev-list --count "$CURRENT_VERSION"..HEAD)" == "0" ]; then
  echo "!!! Error: there have been no commits since the last version" >&2
  exit 1
elif [ "$(git rev-list --count HEAD..origin/master)" != "0" ]; then
  echo "!!! Error: there have been upstream changes on master" >&2
  exit 1
fi

if [ -n "$CURRENT_VERSION" ] && [[ "$CURRENT_VERSION" =~ $VERSION_REGEX ]]; then
  MAJOR="${BASH_REMATCH[1]}"
  MINOR="${BASH_REMATCH[3]}"
  PATCH="${BASH_REMATCH[5]}"

  case $VERSION in
    +major|+M) VERSION="v$((${MAJOR:-0} + 1))${MINOR:+.0}${PATCH:+.0}" ;;
    +minor|+m) VERSION="v${MAJOR:-0}.$((${MINOR:-0} + 1))${PATCH:+.0}" ;;
    +patch|+p) VERSION="v${MAJOR:-0}.${MINOR:-0}.$((${PATCH:-0} + 1))" ;;
  esac
fi

if [[ "$VERSION" =~ ^\+(major|minor|patch|M|m|p)$ ]]; then
  echo "!!! Error: you cannot bump release the first version";
  exit 1;
elif [[ ! "$VERSION" =~ $VERSION_REGEX ]]; then
  echo "!!! Error: invalid version: ${VERSION}" >&2
  exit 1
elif git describe --exact-match "$VERSION" &>/dev/null; then
  echo "!!! Error: ${VERSION} tag already exists" >&2
  exit 1
fi

echo "==> Generating release notes…"
printf "%s\n\n" "$VERSION" > .git/RELEASE_EDITMSG
if [ -n "$CURRENT_VERSION" ]; then
  git log  --reverse --no-merges --format='- %s' "$CURRENT_VERSION"..."$VERSION" | grep -v ":bookmark:"
else
  echo ":tada: Initial release"
fi >> .git/RELEASE_EDITMSG

echo "==> Tagging version…"
if ! git tag -s "$VERSION" -m ":bookmark: Tag ${VERSION}" &>/dev/null; then
  echo "!!! Error: failed to tag version" >&2
  exit 1
fi

echo "==> Pushing master to origin…"
if ! git push origin master &>/dev/null; then
  echo "!!! Error: failed to push to master" >&2
  exit 1
fi

echo "==> Pushing tag to origin…"
if ! git push origin "$VERSION" &>/dev/null; then
  echo "!!! Error: failed to push tag to origin" >&2
  exit 1
fi

if [[ "$(git remote get-url origin)" =~ github.com ]]; then
  echo "==> Releasing on GitHub…"

  if ! command -v hub >/dev/null 2>&1; then
    echo "!!! Error: hub is not installed" >&2
    exit 1
  fi

  if ! hub release create --draft --file=.git/RELEASE_EDITMSG "$VERSION" &>/dev/null; then
    echo "!!! Error: failed to create release" >&2
    exit 1
  fi
fi

echo "==> Successfully released ${VERSION}!"
