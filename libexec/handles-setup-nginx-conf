#!/bin/bash
# Usage: handles-setup-nginx-conf <project_name> [<input_file>]
# Summary: Generate an nginx server configuration file
# Hidden: true

set -e
cd "$(git rev-parse --show-toplevel)"

INPUT_FILE="${2-"nginx.conf.erb"}"
OUTPUT_FILE="${PWD}/${INPUT_FILE//.erb}"
PROJECT_NAME="$1"

if [ -z "$PROJECT_NAME" ] || [ -z "$INPUT_FILE" ]; then
  handles help setup-nginx-conf >&2
  exit 1
elif [ ! -f "$INPUT_FILE" ] || [[ "$INPUT_FILE" != *.erb ]]; then
  echo "!!! Error: invalid input file: ${INPUT_FILE}" >&2
  exit 1
elif ! command -v nginx &>/dev/null; then
  echo "!!! Error: nginx is not installed" >&2
  exit 1
fi

if ! erb "$INPUT_FILE" > "$OUTPUT_FILE"; then
  echo "!!! Error: failed to generate nginx configuration file" >&2
  exit 1
fi

if [ "$(uname -s)" = "Darwin" ]; then
  PREFIX="$(brew --prefix)"

  if ! brew ls --versions launchdns &>/dev/null; then
    echo "!!! Error: launchdns is not installed" >&2
    exit 1
  fi

  if [ "$(readlink /etc/resolver 2>/dev/null)" != "${PREFIX}/etc/resolver" ]; then
    sudo -p "Please enter your password to set up *.dev:" true
    sudo rm -rf /etc/resolver
    sudo ln -sf "${PREFIX}/etc/resolver" /etc/resolver
  fi

  if ! brew ls --versions launch_socket_server &>/dev/null; then
    echo "!!! Error: launch_socket_server is not installed" >&2
    exit 1
  fi

  if ! brew services list | grep "^launch_socket_server.*started" &>/dev/null; then
    sudo -p "Please enter your password to start launch_socket_server:" true
    if ! sudo brew services start launch_socket_server &>/dev/null; then
      echo "!!! Error: failed to start launch_socket_server" >&2
      exit 1
    fi
  fi

  SERVER_FILE="${PREFIX}/etc/nginx/servers/${PROJECT_NAME}.conf"
  if ! ln -sf "$OUTPUT_FILE" "$SERVER_FILE" &>/dev/null; then
    echo "!!! Error: failed to symlink ${OUTPUT_FILE} to ${SERVER_FILE}" >&2
    exit 1
  fi

  if ! brew services restart nginx &>/dev/null; then
    echo "!!! Error: failed to restart nginx" >&2
    exit 1
  fi
fi
